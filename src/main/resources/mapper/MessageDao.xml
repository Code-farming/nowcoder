<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhb.nowcoder.dao.MessageDao">

    <resultMap type="com.lhb.nowcoder.entity.Message" id="MessageMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="fromId" column="from_id" jdbcType="INTEGER"/>
        <result property="toId" column="to_id" jdbcType="INTEGER"/>
        <result property="conversationId" column="conversation_id" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>


    <!--查询单个-->
    <select id="queryById" resultMap="MessageMap">
        select
          id, from_id, to_id, conversation_id, content, status, create_time
        from nowcoder.message
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MessageMap">
        select
          id, from_id, to_id, conversation_id, content, status, create_time
        from nowcoder.message
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MessageMap">
        select
        id, from_id, to_id, conversation_id, content, status, create_time
        from nowcoder.message
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="fromId != null">
                and from_id = #{fromId}
            </if>
            <if test="toId != null">
                and to_id = #{toId}
            </if>
            <if test="conversationId != null and conversationId != ''">
                and conversation_id = #{conversationId}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid) from (
            select max(id) as maxid from nowcoder.message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        ) as m
    </select>

    <select id="selectConversations" resultType="com.lhb.nowcoder.entity.Message">
        select
        <include refid="selectFields"></include>
        from nowcoder.message
        where id in (
        select max(id) from nowcoder.message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from nowcoder.message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from nowcoder.message
        where status = 0
        and from_id !=1
        and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectLetters" resultType="com.lhb.nowcoder.entity.Message">
        select <include refid="selectFields"></include> from nowcoder.message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLatestNotice" resultType="com.lhb.nowcoder.entity.Message">
        select
        <include refid="selectFields"></include>
        from nowcoder.message where id =
        (
        select max(id)
        from nowcoder.message
        where status != 2
        and from_id = 1
        and conversation_id = #{topic}
        and to_id = #{userId}
        )
    </select>

    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id)  from nowcoder.message
        where status != 2
        and from_id = 1
        and conversation_id = #{topic}
        and to_id = #{userId}
    </select>

    <select id="selectNoticeUnReadCount" resultType="java.lang.Integer">
        select count(id) from nowcoder.message
        where status = 0
        and from_id = 1
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
        and to_id = #{userId}
    </select>

    <select id="selectNoticeList" resultType="com.lhb.nowcoder.entity.Message">
        select <include refid="selectFields"></include>
        from nowcoder.message
        where status != 2
        and from_id = 1
        and conversation_id = #{topic}
        and to_id = #{userId}
        order by create_time desc
        limit #{offset},#{limit}
    </select>


    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into nowcoder.message(from_id, to_id, conversation_id, content, status, create_time)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update nowcoder.message
        <set>
            <if test="fromId != null">
                from_id = #{fromId},
            </if>
            <if test="toId != null">
                to_id = #{toId},
            </if>
            <if test="conversationId != null and conversationId != ''">
                conversation_id = #{conversationId},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateStatus">
        update nowcoder.message
        set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">#{id}</foreach>
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from nowcoder.message where id = #{id}
    </delete>

</mapper>